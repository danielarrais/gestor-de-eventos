<div class="nav-wrapper">
  <ul class="nav nav-pills nav-fill flex-column flex-md-row" id="tabs-icons-text" role="tablist">
    <li class="nav-item">
      <a class="nav-link mb-sm-3 mb-md-0 active" id="form-tab" data-toggle="tab" href="#form" role="tab"
         aria-controls="form" aria-selected="true">
        <i class="ni ni-ruler-pencil mr-2"></i>
        Criar
      </a>
    </li>
    <li class="nav-item">
      <a class="nav-link mb-sm-3 mb-md-0" id="preview-tab" data-toggle="tab" href="#preview" role="tab"
         aria-controls="preview" aria-selected="false">
        <i class="ni ni-image mr-2"></i>
        Pr√© Visualizar
      </a>
    </li>
  </ul>
</div>
<div class="card shadow">
  <div class="card-body">
    <div class="tab-content" id="myTabContent">
      <div class="tab-pane fade show active" id="form" role="tabpanel" aria-labelledby="form-tab">
        <%= form_with(model: certificate_template, local: true, html: { multipart: true }) do |f| %>
          <%= validations_errors(f.object) %>
          <div class="row">
            <%= f.fields_for :image, f.object.image ||= f.object.build_image do |ff| %>
              <div class="col-sm-auto">
                <% url = ff.object.url %>

                <%= ff.hidden_field :id %>
                <%= ff.image_field(:file, 'Procurar', 'Alterar', id: 'fileinput', onchange: 'onChangeImage();', value: url) %>
              </div>
            <% end %>
            <div class="col-md">
              <div class="form-group">
                <%= f.label :event_category %>
                <%= f.select(:event_category_id, @event_categories,
                             { include_blank: true },
                             { size: 5,
                               class: 'form-control choices',
                               data: { trigger: '' }, }) %>
              </div>
            </div>
            <div class="col-md-12">
              <div class="form-group">
                <%= f.label :body %>
                <%= f.summernote_area :body, class: 'form-control', placeholder: true, onchange: 'changeText(this)' %>
              </div>
            </div>
            <div class="col-md-12">
              <div class="form-group">
                <div class="form-group">
                  <%= f.label :certificate_signatures %>
                  <%= f.select(:certificate_signature_ids, f.object.certificate_signatures.map { |v| ["#{v.name} - #{v.role}", v.id] },
                               { include_blank: true },
                               { size: 5,
                                 multiple: true,
                                 class: 'form-control choices-ajax',
                                 data: { 'search-text': 'Digite o nome da assinatura',
                                         'search-min': 3,
                                         'search-url': autocomplete_by_name_or_role_certificate_signatures_path }, }) %>
                </div>
              </div>
            </div>
          </div>

          <div class="clearfix">
            <div class="float-right">
              <%= link_to "<span><i class='fa fa-arrow-left mr-1'></i>#{i18n_word(:come_back)}</span>".html_safe, :back,
                          class: 'btn btn-secondary btn-icon btn-1 btn-simple' %>
              <%= button_tag(:class => "btn btn-primary btn-icon btn-1 btn-simple") do %>
                <span><i class="fa fa-floppy-o mr-1"></i> <%= i18n_word(:save) %></span>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
      <div class="tab-pane fade" id="preview" role="tabpanel" aria-labelledby="preview-tab">
        <div id="certificate-frame">
          <div id="certificate-text-frame">
          </div>
          <div id="certificate-signatures-frame">
            <%= render 'view_certificate_signatures', certificate_signatures: certificate_template.certificate_signatures %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
    $(document).ready(() => {
        const choices_signatures = document.getElementById('certificate_template_certificate_signature_ids')

        choices_signatures.addEventListener('removeItem', onChangeSignatures, true,);
        choices_signatures.addEventListener('addItem', onChangeSignatures, true,);

        <% unless certificate_template.new_record? %>
        $('#certificate-frame').css('background-image', `url(<%= certificate_template.image.url %>)`)
        $('#certificate-text-frame').html('<%= j certificate_template.body %>')
        <% end %>

        $(".summernote").on("summernote.change", changeText);

        loadPreview();
    })

    function onChangeImage() {
        debugger
        setTimeout(() => {
            $('#certificate-frame').css('background-image', `url(${$('#fileinput-preview > img').attr('src')})`);
        }, 500)
        loadPreview();
    }

    function loadPreview() {
        const heigth_a4_ref = 807.467
        const width_a4_ref = 1142

        const certificate_frame = $('#certificate-frame');
        const certificate_text_frame = $('#certificate-text-frame');
        const certificate_signatures_frame = $('#certificate-signatures-frame');

        const width = $('#form').width();
        const height = parseInt(width) * heigth_a4_ref / width_a4_ref;

        certificate_frame.css('height', height);

        const top_text = parseInt(height) * 330 / heigth_a4_ref;
        const min_height_text = parseInt(height) * 200 / heigth_a4_ref;

        console.log(top_text)
        certificate_text_frame.css({
            'top': `${top_text}px`,
            'max-height': `${min_height_text}px`,
            'padding-left': '100px',
            'padding-right': '100px',
        });

        const top_signatures = parseInt(top_text + min_height_text) * 520 / 740;

        certificate_signatures_frame.css({
            'top': `${top_signatures}px`,
            'padding-left': '100px',
            'padding-right': '100px',
        });

    }

    function changeText(target) {
        const certificate_text_frame = $('#certificate-text-frame');
        certificate_text_frame.html(target.currentTarget.value);
        loadPreview();
    }

    function onChangeSignatures(event) {
        $.ajax({
            data: {
                selecteds: $(event.target).val()
            },
            type: "GET",
            url: "<%= load_selected_signatures_certificate_templates_path %>",
            dataType: "script"
        });
    }

</script>